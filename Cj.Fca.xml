<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cj.Fca</name>
    </assembly>
    <members>
        <member name="T:Cj.Fca.Context">
            <summary>
            Represents a binary formal context document. A formal context consists of objects and attributes and a incidence relation
            between objects and attributes. For the structure and usage see context markup description (context.xsd).
            </summary>
        </member>
        <member name="T:Cj.Fca.Context.ItemKind">
            <summary>
            Defines the kind of context items for the well defined context document.
            </summary>
        </member>
        <member name="F:Cj.Fca.Context.ItemKind.Generic">
            <summary>Set is interpreted as an object or attribute belonging to given item.</summary>
        </member>
        <member name="F:Cj.Fca.Context.ItemKind.Attribute">
            <summary>Empty set is interpreted as an attribute item.</summary>
        </member>
        <member name="F:Cj.Fca.Context.ItemKind.Object">
            <summary>Empty set is interpreted as an object item.</summary>
        </member>
        <member name="T:Cj.Fca.Context.Status">
            <summary>
            Context manipulations which do not alter the structure of a concept lattice.
            </summary>
        </member>
        <member name="F:Cj.Fca.Context.Status.None">
            <summary>
            The context status is unknown or not defined.
            </summary>
        </member>
        <member name="F:Cj.Fca.Context.Status.ClarifiedByObject">
            <summary>
            The context is clarified by objects that means there are no duplicates of objects with the same intent.
            </summary>
        </member>
        <member name="F:Cj.Fca.Context.Status.ClarifiedByAttribute">
            <summary>
            The context is clarified by attributes that means there are no duplicates of attributes with the same extent.
            </summary>
        </member>
        <member name="F:Cj.Fca.Context.Status.Clarified">
            <summary>
            The context is clarified by objects and attributes.
            </summary>
        </member>
        <member name="F:Cj.Fca.Context.Status.PurifiedByObject">
            <summary>
            The context is clarified, i. e. purified by an object that has all attributes.
            </summary>
        </member>
        <member name="F:Cj.Fca.Context.Status.PurifiedByAttribute">
            <summary>
            The context is clarified, i. e. purified by an attribute that belongs to all objects.
            </summary>
        </member>
        <member name="F:Cj.Fca.Context.Status.Purified">
            <summary>
            The context is clarified, i. e. purified by so called full rows and columns of a binary context.
            </summary>
        </member>
        <member name="F:Cj.Fca.Context.Status.ReducedByObject">
            <summary>
            The context is reduced by reducible objects.
            </summary>
        </member>
        <member name="F:Cj.Fca.Context.Status.ReducedByAttribute">
            <summary>
            The context is reduced by reducible attributes.
            </summary>
        </member>
        <member name="F:Cj.Fca.Context.Status.Reduced">
            <summary>
            The context is reduced by reducible objects and reducible attributes.
            </summary>
        </member>
        <member name="F:Cj.Fca.Context.Status.Standard">
            <summary>
            The context is clarified, purifed and reduced.
            </summary>
        </member>
        <member name="T:Cj.Fca.Context.BinaryItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:Cj.Fca.Context.BinaryItem.HorizontalRightAlignmentStyleByRowLabel">
            <summary>
            Is true if there is no row label defined and all row index values are treated as label.
            </summary>
        </member>
        <member name="P:Cj.Fca.Context.BinaryItem.VerticalLeftRotationStyleByColumnLabel">
            <summary>
            Is true if there is a column label greater than one character. 
            </summary>
        </member>
        <member name="P:Cj.Fca.Context.BinaryItem.HorizontalRightAlignmentStyleByRowMemo">
            <summary>
            Is null if there are not all row memos defined, otherweise false.
            </summary>
        </member>
        <member name="P:Cj.Fca.Context.BinaryItem.VerticalLeftRotationStyleByColumnMemo">
            <summary>
            Is null if there are not all column memos defined and true if there is any column memo greater than one character, otherwise false. 
            </summary>
        </member>
        <member name="P:Cj.Fca.Context.BinaryItem.Status">
            <summary>
            Status of binary context.
            </summary>
        </member>
        <member name="P:Cj.Fca.Context.BinaryItem.Title">
            <summary>
            Title of formal context definition. The title is mandatory according to XSD format specification that is defined by <see cref="M:Cj.Fca.Context.XsdMarkup"/> as an embedded resource (Context.xsd).
            </summary>
        </member>
        <member name="T:Cj.Fca.Context.BinaryItem.Incidence">
            <summary>
            Incidence relation is defined by row index as well as by column index.
            </summary>
        </member>
        <member name="P:Cj.Fca.Context.BinaryItem.Incidence.Column">
            <summary>
            The index of column.
            </summary>
        </member>
        <member name="P:Cj.Fca.Context.BinaryItem.Incidence.Row">
            <summary>
            The index of row.
            </summary>
        </member>
        <member name="P:Cj.Fca.Context.BinaryItem.CurrentLabel">
            <summary>
            This property can be used to change the effective label by data bindings. The default is set to the label property.
            </summary>
        </member>
        <member name="F:Cj.Fca.Context.MaxDegreeOfParallelism">
            <summary>
            Set degree of parallelism to be used to find concepts concurrently.
            </summary>
        </member>
        <member name="M:Cj.Fca.Context.Validate(System.String@,System.String)">
            <summary>
            This static function validates the given XML file against an XSD format specification that is defined by <see cref="M:Cj.Fca.Context.XsdMarkup"/> as an embedded resource (Context.xsd).
            </summary>
            <param name="Protocol">Contains error messages if format errors are detected.</param>
            <param name="XmlFile">XML file to be checked.</param>
            <returns>True if there are no errors, otherwise false. Errors can be looked up in the protocol back from this procedure.</returns>
        </member>
        <member name="M:Cj.Fca.Context.Validate(System.String@,System.Xml.Linq.XDocument)">
            <summary>
            This static function validates the given XML file against an XSD format specification that is defined by <see cref="M:Cj.Fca.Context.XsdMarkup"/> as an embedded resource (Context.xsd).
            </summary>
            <param name="Protocol">Contains error messages if format errors are detected.</param>
            <param name="XmlData">XML data to be checked.</param>
            <returns>True if there are no errors, otherwise false. Errors can be looked up in the protocol back from this procedure.</returns>
        </member>
        <member name="M:Cj.Fca.Context.CreateStandardContextWithTwoElements">
            <summary>
            Creates a standard context with two elements.
            </summary>
            <returns>A context document that contains a two dimensional data structure.</returns>
        </member>
        <member name="M:Cj.Fca.Context.ToHtml(System.String[],System.String,System.Boolean)">
            <summary>
            Converts protocol strings to simple html page with fixed font face set to Courier New.
            </summary>
            <param name="Protocol">Text to be converted.</param>
            <param name="Title">Title of html page.</param>
            <param name="Wrap">Determines if text should be wrapped.</param>
            <returns>Html text that can be shown by a browser.</returns>
        </member>
        <member name="M:Cj.Fca.Context.ToString(System.Xml.Linq.XElement[],System.Boolean)">
            <summary>
            Serializes an XML vector to a string representation. It can be used to convert extents and/or intents to a string object.
            </summary>
            <see cref="M:Cj.Fca.Context.ToHtml(System.String[],System.String,System.Boolean)"/>
            <param name="Items">Items to be converted to string representation.</param>
            <param name="WithLabel">True if label should be written instead of index.</param>
            <returns>Serialized XML item to string.</returns>
        </member>
        <member name="M:Cj.Fca.Context.ToString(System.ValueTuple{System.Xml.Linq.XElement[],System.Xml.Linq.XElement[],System.Xml.Linq.XElement[]},System.Boolean)">
            <summary>
            Serializes an implication to a string representation. An implication consists of two sets where A' is a subset ob B'.
            </summary>
            <param name="Implication">Implication to be converted to string representation.</param>
            <param name="WithSupport">Offers the fraction of objects where the intents which contain the union of A and B.</param>
            <returns>Serialized XML tuple to string.</returns>
        </member>
        <member name="M:Cj.Fca.Context.#ctor(System.String)">
            <summary>
            Creates a valid context document.
            </summary>
            <param name="XmlFile">XML file to be read.</param>
        </member>
        <member name="M:Cj.Fca.Context.#ctor(System.Xml.Linq.XDocument)">
            <summary>
            Creates a valid context document.
            </summary>
            <param name="XmlData">XML data to be read.</param>
        </member>
        <member name="M:Cj.Fca.Context.DocumentUri">
            <summary>
            Base uri will be set by constructor if XML file is read.
            </summary>
            <returns>Document uri belonging to formal context if exists.</returns>
        </member>
        <member name="M:Cj.Fca.Context.GetContextDocument">
            <summary>
            Creates a deep copy of given context document.
            </summary>
            <returns>Returns a copy of the underlying XML document.</returns>
        </member>
        <member name="M:Cj.Fca.Context.FindConceptsByIterationAsync(Cj.Fca.Context.ItemKind)">
            <summary>
            Computes all formal concepts of given context by iteration, i.e., every extent resp. intent is the intersection of
            attribute extents resp. object intents.
            </summary>
            <param name="Kind">The kind parameter is used to start the computation over attributes or objects. If
            set to generic, the computation starts with the smallest size of given context items.</param>
            <returns>List of concepts according to their order of computation.</returns>
        </member>
        <member name="M:Cj.Fca.Context.FindConceptsByPowerSetAsync(Cj.Fca.Context.ItemKind)">
            <summary>
            Computes all formal concepts of given context by naive algorithm, i.e., each item of the power set of
            attribute or object items is checked with the help of the derivation operator whether A = A'' is true.
            </summary>
            <param name="Kind">The kind parameter is used to start the computation over attributes or objects. If
            set to generic, the computation starts with the smallest size of given context items.</param>
            <returns>Sorted list of concepts.</returns>
        </member>
        <member name="M:Cj.Fca.Context.FindConceptsByPowerSetParallel(System.Threading.CancellationTokenSource,Cj.Fca.Context.ItemKind)">
            <summary>
            Computes all formal concepts of given context by naive algorithm concurrently, i.e., each item of the power set of
            attribute or object items is checked with the help of the derivation operator whether A = A'' is true.
            </summary>
            <param name="Cancellation">Signals cancellation.</param>
            <param name="Kind">The kind parameter is used to start the computation over attributes or objects. If
            set to generic, the computation starts with the smallest size of given context items.</param>
            <returns>Sorted list of concepts.</returns>
        </member>
        <member name="M:Cj.Fca.Context.ClarifyContextAsync(Cj.Fca.Context.Status)">
            <summary>
            Attributes with the same extent and/or objects with the same intent will be merged. This kind of context manipulation
            does not alter the structure of the concept lattice.
            </summary>
            <returns>The clarified context.</returns>
        </member>
        <member name="M:Cj.Fca.Context.IsValid">
            <summary>
            Checks whether context document is valid.
            </summary>
            <returns>Returns true if context document is valid, otherwise false.</returns>
        </member>
        <member name="M:Cj.Fca.Context.GetTitle">
            <summary>
            Title of context document that is required by XML schema.
            </summary>
            <returns>Title of context document.</returns>
        </member>
        <member name="M:Cj.Fca.Context.GetAttributes">
            <summary>
            Attribute declarations of given context document.
            </summary>
            <returns>Returns the array of attribute declarations.</returns>
        </member>
        <member name="M:Cj.Fca.Context.GetAttributes(System.Int32[])">
            <summary>
            Selected attribute declarations of given context document.
            </summary>
            <returns>Returns a sorted set of attribute declarations defined by an array of selected index positions. If an index does not exist, the return value is an empty array.</returns>
        </member>
        <member name="M:Cj.Fca.Context.GetObjects">
            <summary>
            Object declarations of given context document.
            </summary>
            <returns>Returns the array of object declarations.</returns>
        </member>
        <member name="M:Cj.Fca.Context.GetObjects(System.Int32[])">
            <summary>
            Selected object declarations of given context document.
            </summary>
            <returns>Returns a sorted set of object declarations defined by an array of selected index positions. If an index does not exist, the return value is an empty array.</returns>
        </member>
        <member name="M:Cj.Fca.Context.Row(System.Int32)">
            <summary>
            Row at given index position.
            </summary>
            <param name="Index">Index to be set in the range from 1 to n.</param>
            <returns>Returns the row that consists of all columns in an ascending order of column index that belong to the row position.</returns>
        </member>
        <member name="M:Cj.Fca.Context.Column(System.Int32)">
            <summary>
            Column at given index position.
            </summary>
            <param name="Index">Index to be set in the range from 1 to n.</param>
            <returns>Returns the column that consists of all rows in an ascending order of row index that belong to the row position.</returns>
        </member>
        <member name="M:Cj.Fca.Context.AttributeConcept(System.Int32)">
            <summary>
            Computes an attribute concept.
            </summary>
            <param name="Index">Index of an attribute starting from 1 to n.</param>
            <returns>Returns attribute concept that belongs to given attribute index.</returns>
        </member>
        <member name="M:Cj.Fca.Context.ObjectConcept(System.Int32)">
            <summary>
            Computes an object concept.
            </summary>
            <param name="Index">Index of an object starting from 1 to n.</param>
            <returns>Returns object concept that belongs to given object index.</returns>
        </member>
        <member name="M:Cj.Fca.Context.ToStringArray(System.Boolean)">
            <summary>
            Converts the XML data structure of formal context to an ASCII or HTML table.
            </summary>
            <param name="AsHtml">Should be true if html format is required otherwise false.</param>
            <returns>Lines of ASCII or HTML document.</returns>
        </member>
        <member name="M:Cj.Fca.Context.IsStandard">
            <summary>
            A standard context is clarified, purified and reduced by objects and attributes.
            </summary>
            <returns>Returns true if the context status is valid.</returns>
        </member>
        <member name="M:Cj.Fca.Context.ClarifyObjects">
            <summary>
            This function merges objects with the same intent.
            </summary>
        </member>
        <member name="M:Cj.Fca.Context.ClarifyAttributes">
            <summary>
            This function merges attributes with the same extent.
            </summary>
        </member>
        <member name="M:Cj.Fca.Context.IsClarifiedByAttribute">
            <summary>
            Determines whether the current context is clarified by attribute. 
            </summary>
            <returns>Returns true if the given status is valid.</returns>
        </member>
        <member name="M:Cj.Fca.Context.IsClarifiedByObject">
            <summary>
            Determines whether the current context is clarified by object. 
            </summary>
            <returns>Returns true if the given status is valid.</returns>
        </member>
        <member name="M:Cj.Fca.Context.IsClarified(Cj.Fca.Context.Status)">
            <summary>
            Determines whether the current context is clarified. 
            </summary>
            <param name="StatusToBeChecked">The status that is to be checked for the given context.</param>
            <returns>Returns true if the given status is valid.</returns>
        </member>
    </members>
</doc>
